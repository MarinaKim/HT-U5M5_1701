#include<stdio.h>
#include<math.h>
#include<iostream>
#include<stdint.h>
#include<time.h>

using namespace std;
//U5M5
void main()
{
	int n;
	setlocale(LC_ALL, "Russian");
	srand(time(NULL));
	do
	{
		cout << "введите номер задания:";
		cin >> n;
		switch (n) {

			//1.	Дан целочисленный квадратный массив 10×10. Найти сумму элементов  каждой строки.
		case 1: {
			int m[10][10] = { { 0 },{ 0 } }, sum = 0, i, j;

			for (i = 0; i < 10; i++)
			{
				for (j = 0; j < 10; j++)
				{
					m[i][j] = 0 + rand() % 10;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			for (i = 0; i < 10; i++)
			{
				sum = 0;
				for (j = 0; j < 10; j++)
				{
					sum += m[i][j];
				}
				cout << "сумма элементов " << i << "строки составляет: " << sum << endl;
			}

		} break;

			//2.	Дан целочисленный квадратный массив 4×4. Найти строку с наименьшей суммой элементов
		case 2: {
			int m[4][4] = { { 0 },{ 0 } }, sum = 0, i, j, k[4] = { 0 }, min, index;

			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 4; j++)
				{
					m[i][j] = 0 + rand() % 10;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			for (i = 0; i < 4; i++)
			{
				sum = 0;
				for (j = 0; j < 4; j++)
				{
					sum += m[i][j];
				}
				cout << "сумма элементов " << i << "строки составляет: " << sum << endl;
				k[i] = sum;
			}

			min = k[0];
			for (i = 0; i < 4; i++)
			{
				if (k[i] < min)
				{
					min = k[i];
					index = i;
				}
			}

			cout << "строку с наименьшей суммой элементов: " << index << endl;
		} break;

			//3.	Дана целочисленная матрица  6× 8. Найти произведение положительных элементов первого столбца.
		case 3: {
			int m[6][8] = { { 0 },{ 0 } }, pr = 1, i, j;

			for (i = 0; i < 6; i++)
			{
				for (j = 0; j < 8; j++)
				{
					m[i][j] = -10 + rand() % 30;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			for (i = 0; i < 6; i++)
			{
				if (m[i][0] > 0)
				{
					pr *= m[i][0];
				}
			}

			cout << "произведение положительных элементов первого столбца: " << pr << endl;
		} break;

			//4.	Составить программу, которая заполняет квадратную матрицу порядка n натуральными числами 1, 2, 3, .. ., n2,
			//записывая их в нее "по спирали" по часовой стрелке.
		case 4: {
			int m[4][4], i, j, k = 1;
			int n=4;
			for (i = 1; i <= 2; i++)
			{
				for (j = (i - 1); j < (n-i+1); j++)
				{
					m[i-1][j] = k++;
				}
				for (j = i; j < (n - i + 1); j++)
				{
					m[j][n-i] = k++;
				}
				for (j = (n-i-1); j >=( i-1); --j)
				{
					m[n-i][j] = k++;
				}
				for (j = n - i - 1; j >= i; j--)
				{
					m[j][i-1] = k++;
				}
			}
			cout << "матрица, заполняемая по спирали по часовой стрелке: " << endl;
			for (k = 0; k < 4; k++) {
				for (j = 0; j < 4;j++)
				{
					cout << m[k][j] << "\t";
					
				}
				cout << endl;
				
			}
		} break;

			//5.	Дан двухмерный целочисленный массив A(M,N). Составить  одномерный массив B из номеров строк этого массива
		case 5: {
			int m[4][5] = { { 0 },{ 0 } }, i, j, c[4] = { 0 };

			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 5; j++)
				{
					m[i][j] = -30 + rand() % 60;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			for (i = 0; i < 4; i++)
			{
				c[i] = i;
				cout << c[i] << endl;
			}

		} break;

			//6.	Написать программу, которая в матрице чисел A(N,M) находит все элементы, превышающие по абсолютной величине заданное число B.
			//Подсчитать число таких элементов и записать их в массив C. 
		case 6: {
			int m[4][5] = { { 0 },{ 0 } }, b, i, j, k = 0, c[20] = { 0 }, l = 0;

			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 5; j++)
				{
					m[i][j] = -30 + rand() % 60;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			cout << "Введите число b: ";
			cin >> b;

			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 5; j++)
				{
					if (abs(m[i][j]) > b)
						k++;
					c[l] = m[i][j];
					l++;
				}
			}

			cout << "кол-во элементов превышающих b: " << k << endl;

			cout << "массив из элементов, превышающие по абсолютной величине заданное число b: " << endl;
			for (int l = 0; l < 20; l++)
				cout << c[l] << "\t";

		} break;

			//7.	Дана целочисленная матрица размера 8х5. Определить: 
			//	a.сумму всех элементов второго столбца массива;
			//b.сумму всех элементов 3 - й строки массива.

		case 7: {
			int m[8][5] = { { 0 },{ 0 } }, sum = 0, sum1 = 0, i, j;

			for (i = 0; i < 8; i++)
			{
				for (j = 0; j < 5; j++)
				{
					m[i][j] = -10 + rand() % 30;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			for (i = 0; i < 8; i++)
			{
				for (j = 0; j < 5; j++)
				{
					if (j == 2)
						sum += m[i][j];


					if (i == 3)
						sum1 += m[i][j];

				}
			}
			cout << "сумма всех элементов второго столбца массива: " << sum << endl;
			cout << "сумма всех элементов 3 - й строки массива: " << sum1 << endl;
		} break;

			//8.	Дана целочисленная прямоугольная матрица размера M·N. Сформировать одномерный массив, состоящий из элементов, лежащих в интервале [1,10].
			//Найти произведение елементов полученного одномерного массив
		case 8: {
			int m[4][5] = { { 0 },{ 0 } }, i, j, c[20] = { 0 }, l = 0, k = 0;

			cout << "исходная матрица: " << endl;
			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 5; j++)
				{
					m[i][j] = -30 + rand() % 60;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 5; j++)
				{
					if ((m[i][j] >= 1) && (m[i][j] <= 10))
					{
						c[l] = m[i][j];
						k++;
						l++;
					}
				}
			}
			cout << "массив, состоящий из элементов, лежащих в интервале [1,10]: " << endl;
			for (l = 0; l < k; l++)
				cout << c[l] << "\t";
			cout << endl;
		} break;

			//9.	Дана целочисленная квадратная матрица. Указать столбец (назвать его номер), где минимальное количество элементов, кратных сумме индексов
		case 9: {
			int m[8][8] = { { 0 },{ 0 } }, i, j, k = 0, l[8], min, index;

			cout << "исходный массив: " << endl;
			for (i = 1; i <= 8; i++)
			{
				for (j = 1; j <= 8; j++)
				{
					m[i][j] = -30 + rand() % 100;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}
			cout << "массив количество элементов, кратных сумме индексов: " << endl;
			for (j = 1; j <= 8; j++)
			{
				k = 0;
				for (i = 1; i <= 8; i++)
				{
					if (m[i][j] % (i + j) == 0)
						k++;
				}

				l[j] = k;
				cout << l[j] << endl;
			}
			min = l[1];
			for (j = 1; j <= 8; j++)
			{
				if (l[j] != 0)
				{
					if (l[j] < min)
					{
						min = l[j];
						index = j;
					}
				}
			}
			cout << "столбец (назвать его номер), где минимальное количество элементов, кратных сумме индексов: " << index << endl;

		} break;

			//10.	Дана целочисленная квадратная матрица. Найти сумму элементов матрицы, лежащих выше главной диагонали
		case 10: {
			int m[4][4] = { { 0 },{ 0 } }, i, j, sum = 0;

			cout << "исходный массив: " << endl;
			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 4; j++)
				{
					m[i][j] = 0 + rand() % 10;
					cout << m[i][j] << "\t";
				}
				cout << endl;
			}

			for (i = 0; i < 4; i++)
			{
				for (j = 0; j < 4; j++)
				{
					if (i == j&&i != 3 && j != 3)
					{
						for (i = 0; i < 4; i++)
						{
							for (j = i + 1; j < 4; j++)
							{
								sum += m[i][j];
							}
						}
					}
				}

			}
			cout << "сумма элементов матрицы, лежащих выше главной диагонали: " << sum << endl;

		} break;
		}
	} while (n > 0);
}
